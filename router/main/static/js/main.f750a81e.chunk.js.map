{"version":3,"sources":["components/login/index.js","api/index.js","components/homepage/index.js","App.js","reportWebVitals.js","index.js"],"names":["Login","_ref","onLoginSuccessful","email","setEmail","useState","password","setPassword","hasError","setHasError","React","createElement","Container","Card","className","Header","as","Body","Form","onSubmit","async","event","preventDefault","loginResult","fetch","method","body","JSON","stringify","headers","then","response","console","log","ok","Error","status","json","catch","err","login","title","firstname","lastname","picture","token","localStorage","setItem","Group","controlId","Label","Control","type","placeholder","onChange","target","value","Text","Alert","variant","Button","Homepage","onLogout","isLoading","setIsLoading","noArtworksFound","setNoArtworksFound","keyword","setKeyword","artworks","setArtworks","fluid","Row","noGutters","onClick","src","alt","_ref2","concat","searchArtworks","length","InputGroup","Prepend","disabled","Spinner","animation","CardColumns","map","artwork","idx","id","image_url","artist_display","date_display","medium_display","place_of_origin","key","href","rel","Img","Title","style","whiteSpace","App","isUserSignedIn","setIsUserSignedIn","useEffect","getItem","removeItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f750a81e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Container, Form, Button, Alert, Card } from \"react-bootstrap\";\nimport { login } from \"../../api\";\n\nfunction Login({ onLoginSuccessful }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [hasError, setHasError] = useState(false);\n\n  const onEmailChange = (event) => setEmail(event.target.value);\n  const onPasswordChange = (event) => setPassword(event.target.value);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    setHasError(false);\n    const loginResult = await login({ email, password });\n    console.log(loginResult);\n    if (!loginResult) setHasError(true);\n    else {\n      const { title,firstname,lastname,picture, token } = loginResult;\n      \n      // Save user IDs on local storage\n      localStorage.setItem(\"title\", title);\n      localStorage.setItem(\"firstname\", firstname);\n      localStorage.setItem(\"lastname\", lastname);\n      localStorage.setItem(\"picture\", picture);\n      localStorage.setItem(\"token\", token);\n      onLoginSuccessful();\n    }\n  };\n\n  return (\n    <Container>\n      <Card className=\"mt-5\">\n        <Card.Header as=\"h1\">Login</Card.Header>\n        <Card.Body>\n          <Form className=\"w-100\" onSubmit={onSubmit}>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                onChange={onEmailChange}\n                value={email}\n              />\n              <Form.Text className=\"text-muted\">\n                We'll never share your email with anyone else.\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={onPasswordChange}\n                value={password}\n              />\n            </Form.Group>\n            {hasError && (\n              <Alert variant={\"danger\"}>\n                The email address and password you entered don't match any\n                account. Please try again.\n              </Alert>\n            )}\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n}\n\nexport default Login;\n","export async function login({ email, password }) {\n  return await fetch(\"http://api-user66004.se-rmutl.net/api/auth/login\", {\n    method: \"POST\",\n    body: JSON.stringify({ email, password }),\n    headers: { \"Content-Type\": \"application/json\" },\n  })\n    .then((response) => {\n      console.log(response);\n      // If request is not successful, display error message\n      if (!response.ok) {\n        throw new Error(\"HTTP status \" + response.status);\n      }\n\n      return response.json();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n}\n\nexport async function searchArtworks({ keyword }) {\n  return await fetch(`http://api-user66004.se-rmutl.net/api/homepage/getArtworks/${keyword}`, {\n    method: \"GET\",\n    headers: { \"Content-Type\": \"application/json\" },\n  })\n    .then((response) => {\n      // If request is not successful, display error message\n      if (!response.ok) {\n        throw new Error(\"HTTP status \" + response.status);\n      }\n\n      return response.json();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n}\n","import React, { useState } from \"react\";\nimport {\n  Container,\n  Row,\n  Form,\n  Button,\n  Alert,\n  InputGroup,\n  Spinner,\n  CardColumns,\n  Card,\n} from \"react-bootstrap\";\nimport { searchArtworks } from \"../../api\";\n\nfunction Homepage({ onLogout }) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [noArtworksFound, setNoArtworksFound] = useState(false);\n  const [keyword, setKeyword] = useState(\"\");\n  const [artworks, setArtworks] = useState([]);\n  const title = localStorage.title;\n  const firstname = localStorage.firstname;\n  const lastname = localStorage.lastname;\n  const picture = localStorage.picture;\n  const onChangeKeyword = (event) => {\n    setKeyword(event.target.value);\n  };\n\n  const onSearchArtworks = async (event) => {\n    event.preventDefault();\n    setIsLoading(true);\n    const artworks = await searchArtworks({ keyword });\n    setArtworks(artworks);\n    setNoArtworksFound(!artworks || !artworks.length);\n    setIsLoading(false);\n  };\n\n  return (\n    <Container fluid>\n      <Row className=\"mt-2 mb-2 justify-content-end\" noGutters>\n        <Button variant=\"outline-danger\" onClick={onLogout}>\n          Log out\n        </Button>\n      </Row>\n      <Row noGutters>\n      <div className=\"user-image\">\n        <img src={picture} className=\"rounded-circle\" alt={firstname} />\n        </div>\n        <h1>Welcome! {title+\" \"+firstname +\" \"+ lastname}</h1>\n      </Row>\n      <Row className=\"mt-2\" noGutters>\n        <h6>\n          Enter one or multiple keywords below to search for artworks in the Art\n          Institute of Chicago.\n        </h6>\n      </Row>\n      <Row noGutters>\n        <Form className=\"w-100 mb-5\" onSubmit={onSearchArtworks}>\n          <InputGroup>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"e.g. Monet, O'Keeffe, Ancient Greek...\"\n              onChange={onChangeKeyword}\n              value={keyword}\n            />\n            <InputGroup.Prepend>\n              <Button\n                variant=\"outline-primary\"\n                disabled={!keyword}\n                type=\"submit\"\n              >\n                Search artworks\n              </Button>\n            </InputGroup.Prepend>\n          </InputGroup>\n        </Form>\n      </Row>\n      {isLoading && (\n        <Row className=\"justify-content-center mb-5\">\n          <Spinner animation=\"border\" variant=\"primary\" />\n        </Row>\n      )}\n      {noArtworksFound && !isLoading ? (\n        <Alert variant={\"info\"}>\n          No results were found for the entered keyword/s.\n        </Alert>\n      ) : (\n        <CardColumns>\n          {artworks.map((artwork, idx) => {\n            const {\n              id,\n              title,\n              image_url,\n              artist_display,\n              date_display,\n              medium_display,\n              place_of_origin,\n            } = artwork;\n            return (\n              <Card key={`artwork-${id}`}>\n                <a\n                  href={image_url}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  aria-current=\"true\"\n                >\n                  <Card.Img variant=\"top\" src={image_url} />\n                </a>\n                <Card.Body>\n                  <Card.Title>{title}</Card.Title>\n                  <Card.Text\n                    className=\"text-muted\"\n                    style={{ whiteSpace: \"pre-line\" }}\n                  >\n                    {place_of_origin}, {date_display}\n                    <br />\n                    <small className=\"text-muted\">{artist_display}</small>\n                  </Card.Text>\n                  <Card.Text>\n                    <small className=\"text-muted\">{medium_display}</small>\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      )}\n    </Container>\n  );\n}\n\nexport default Homepage;\n","import React, { useEffect, useState } from \"react\";\nimport Login from \"./components/login\";\nimport Homepage from \"./components/homepage\";\n\nfunction App() {\n  const [isUserSignedIn, setIsUserSignedIn] = useState(false);\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) setIsUserSignedIn(true);\n    else setIsUserSignedIn(false);\n  }, []);\n\n  const onLoginSuccessful = () => {\n    setIsUserSignedIn(true);\n  };\n\n  const onLogout = () => {\n    localStorage.removeItem(\"title\");\n    localStorage.removeItem(\"firstname\");\n    localStorage.removeItem(\"lastname\");\n    localStorage.removeItem(\"picture\");\n    localStorage.removeItem(\"token\");\n    setIsUserSignedIn(false);\n  };\n\n  return (\n    (isUserSignedIn && <Homepage onLogout={onLogout} />) || (\n      <Login onLoginSuccessful={onLoginSuccessful} />\n    )\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}